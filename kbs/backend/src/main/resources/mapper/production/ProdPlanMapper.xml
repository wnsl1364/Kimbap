<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kimbap.kbs.production.mapper.ProdPlanMapper">
    <!-- Master -->
    
    <select id="selectProdPlans" resultType="ProdPlanVO">
        SELECT * FROM prod_plan
    </select>

    <insert id="insertProdPlan">
        INSERT INTO prod_plan (produ_plan_cd, fcode, fac_ver_cd, plan_start_dt, plan_end_dt, mname, note)
        VALUES (#{produPlanCd}, #{fcode}, #{facVerCd}, #{planStartDt}, #{planEndDt}, #{mname}, #{note})
    </insert>

    <update id="updateProdPlan">
        UPDATE prod_plan SET
            fcode = #{fcode},
            fac_ver_cd = #{facVerCd},
            plan_start_dt = #{planStartDt},
            plan_end_dt = #{planEndDt},
            mname = #{mname},
            note = #{note}
        WHERE produ_plan_cd = #{produPlanCd}
    </update>

    <delete id="deleteProdPlan">
        DELETE FROM prod_plan WHERE produ_plan_cd = #{produPlanCd}
    </delete>

    <!-- Detail -->
    <insert id="insertProdPlanDetail">
        INSERT INTO prod_plan_d (ppdcode, produ_plan_cd, pcode, prod_ver_cd, plan_qty)
        VALUES (#{ppdcode}, #{produPlanCd}, #{pcode}, #{prodVerCd}, #{planQty})
    </insert>

    <update id="updateProdPlanDetail">
        UPDATE prod_plan_d SET
            pcode = #{pcode},
            prod_ver_cd = #{prodVerCd},
            plan_qty = #{planQty}
        WHERE ppdcode = #{ppdcode}
    </update>

    <delete id="deleteDetailsByPlanCd">
        DELETE FROM prod_plan_d WHERE produ_plan_cd = #{produPlanCd}
    </delete>

    <!-- 생산계획 조건 검색 -->
    <select id="selectProdPlansByCondition" parameterType="ProdPlanVO" resultType="ProdPlanVO">
        SELECT
            pp.produ_plan_cd,
            pp.fcode,
            pp.fac_ver_cd,
            pp.plan_dt,
            pp.plan_start_dt,
            pp.plan_end_dt,
            f.fac_name,
            pp.note,
            SUM(ppd.plan_qty) AS sum_plan_qty,
            MIN(ppd.unit) KEEP (DENSE_RANK FIRST ORDER BY ppd.ppdcode) AS first_unit
        FROM prod_plan pp
        JOIN factory f
            ON pp.fcode = f.fcode
            AND pp.fac_ver_cd = f.fac_ver_cd
        LEFT JOIN prod_plan_d ppd
            ON pp.produ_plan_cd = ppd.produ_plan_cd
        <where>
            <if test="produPlanCd != null and produPlanCd != ''">
            AND LOWER(pp.produ_plan_cd) LIKE '%' || LOWER(#{produPlanCd}) || '%'
            </if>
            <if test="planDtStart != null">
            AND pp.plan_dt &gt;= #{planDtStart}
            </if>
            <if test="planDtEnd != null">
            AND pp.plan_dt &lt;= #{planDtEnd}
            </if>
            <if test="periodStartDt != null">
            AND pp.plan_start_dt &gt;= #{periodStartDt}
            </if>
            <if test="periodEndDt != null">
            AND pp.plan_end_dt &lt;= #{periodEndDt}
            </if>
            <if test="fcode != null and facVerCd != null">
            AND pp.fcode = #{fcode}
            AND pp.fac_ver_cd = #{facVerCd}
            </if>
        </where>
        GROUP BY
            pp.produ_plan_cd,
            pp.fcode,
            pp.fac_ver_cd,
            pp.plan_dt,
            pp.plan_start_dt,
            pp.plan_end_dt,
            f.fac_name,
            pp.note
    </select>
    <!-- 생산계획상세 조건 검색 -->
    <select id="selectDetailsByPlanCd"  parameterType="String" resultType="ProdPlanDetailVO">
        SELECT
            pp.ppdcode,
            pp.produ_plan_cd,
            pp.pcode,
            pp.prod_ver_cd,
            pp.plan_qty,
            pp.unit,
            pp.ex_produ_dt,
            pp.seq,
            p.prod_name
        FROM prod_plan_d pp
        JOIN product p
            ON pp.pcode = p.pcode
            AND pp.prod_ver_cd = p.prod_ver_cd
        WHERE produ_plan_cd = #{produPlanCd}
        ORDER BY ppdcode
    </select>

    <select id="selectAllProducts" resultType="ProdsVO">
        SELECT
            pcode,
            prod_ver_cd,
            prod_name,
            prod_unit_price,
            wei,
            unit,
            edate,
            sto_temp,
            safe_stock,
            pac_unit,
            cha_rea,
            is_used,
            note,
            prime_cost,
            regi,
            modi
        FROM (
            SELECT 
                p.*,
                ROW_NUMBER() OVER (PARTITION BY p.pcode ORDER BY p.prod_ver_cd DESC) AS rn
            FROM product p
            WHERE p.is_used = 'f1'
        )
        WHERE rn = 1
    </select>
</mapper>
