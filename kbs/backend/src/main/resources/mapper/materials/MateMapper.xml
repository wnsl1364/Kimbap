<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kimbap.kbs.materials.mapper.MateMapper">
    
    <!-- 자재입고 목록 조회 (발주 정보 포함) -->
    <select id="getMateInboList" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mi.mate_inbo_cd,
            mi.mcode,
            mi.mate_ver_cd,
            mi.wcode,
            mi.ware_ver_cd,
            mi.fcode,         
            mi.fac_ver_cd,    
            mi.purc_d_cd,
            mi.lot_no,
            mi.supplier_lot_no,
            mi.inbo_dt,
            mi.inbo_status,
            mi.total_qty,
            mi.mname,
            mi.note,
            mi.cp_cd,
            mi.deli_dt,
            
            -- 발주상세 정보
            pod.ex_deli_dt,
            pod.purc_qty,
            pod.unit_price,
            pod.purc_d_status,
            
            -- 발주 기본 정보
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            
            -- company 테이블에서 회사명 가져오기
            c.cp_name,
            
            -- material 테이블에서 단위, 보관조건 가져오기
            m.unit,
            m.sto_con,
            m.mate_name,
            
            -- employee 테이블에서 담당자명 가져오기 ✅ 추가!
            e.emp_name AS regi_name
            
        FROM mate_inbo mi
        LEFT JOIN purc_ord_d pod ON mi.purc_d_cd = pod.purc_d_cd
        LEFT JOIN purc_ord po ON pod.purc_cd = po.purc_cd
        LEFT JOIN company c ON mi.cp_cd = c.cp_cd
        LEFT JOIN material m ON mi.mcode = m.mcode AND mi.mate_ver_cd = m.mate_ver_cd
        LEFT JOIN employee e ON po.regi = e.emp_cd
        ORDER BY mi.inbo_dt DESC
    </select>
    
    <!-- 자재입고 단건 조회 -->
    <select id="getMateInboById" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mi.mate_inbo_cd,
            mi.mcode,
            mi.mate_ver_cd,
            mi.wcode,
            mi.ware_ver_cd,
            mi.fcode,          
            mi.fac_ver_cd,    
            mi.purc_d_cd,
            mi.lot_no,
            mi.supplier_lot_no,
            mi.inbo_dt,
            mi.inbo_status,
            mi.total_qty,
            mi.mname,
            mi.note,
            mi.cp_cd,
            mi.deli_dt,
            
            -- 발주상세 정보
            pod.ex_deli_dt,
            pod.purc_qty,
            pod.unit_price,
            pod.purc_d_status,
            
            -- 발주 기본 정보
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            
            -- company 테이블에서 회사명 가져오기
            c.cp_name,
            
            -- material 테이블에서 단위, 보관조건 가져오기
            m.unit,
            m.sto_con,
            m.mate_name
            
        FROM mate_inbo mi
        LEFT JOIN purc_ord_d pod ON mi.purc_d_cd = pod.purc_d_cd
        LEFT JOIN purc_ord po ON pod.purc_cd = po.purc_cd
        LEFT JOIN company c ON mi.cp_cd = c.cp_cd
        LEFT JOIN material m ON mi.mcode = m.mcode AND mi.mate_ver_cd = m.mate_ver_cd
        WHERE mi.mate_inbo_cd = #{mateInboCd}
    </select>
    
    <!-- 특정 발주번호의 자재입고 데이터 조회 -->
    <select id="getMateInboByPurcCd" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mi.mate_inbo_cd,
            mi.mcode,
            mi.mate_ver_cd,
            mi.wcode,
            mi.ware_ver_cd,
            mi.fcode,          
            mi.fac_ver_cd,    
            mi.purc_d_cd,
            mi.lot_no,
            mi.supplier_lot_no,
            mi.inbo_dt,
            mi.inbo_status,
            mi.total_qty,
            mi.mname,
            mi.note,
            mi.cp_cd,
            mi.deli_dt,
            
            -- 발주상세 정보
            pod.ex_deli_dt,
            pod.purc_qty,
            pod.unit_price,
            pod.purc_d_status,
            
            -- 발주 기본 정보
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            e.emp_name AS regiName,
            
            -- company 테이블에서 회사명 가져오기
            c.cp_name,
            
            -- material 테이블에서 단위, 보관조건, 자재명 가져오기
            m.unit,
            m.sto_con,
            m.mate_name
            
        FROM mate_inbo mi
        LEFT JOIN purc_ord_d pod ON mi.purc_d_cd = pod.purc_d_cd
        LEFT JOIN purc_ord po ON pod.purc_cd = po.purc_cd
        LEFT JOIN company c ON mi.cp_cd = c.cp_cd
        LEFT JOIN material m ON mi.mcode = m.mcode AND mi.mate_ver_cd = m.mate_ver_cd
        LEFT JOIN employee e ON po.regi = e.emp_cd
        WHERE po.purc_cd = #{purcCd}
        ORDER BY mi.inbo_dt DESC, pod.purc_d_cd
    </select>
    
    <!-- 자재입고 등록 -->
    <insert id="insertMateInbo" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        INSERT INTO mate_inbo (
            mate_inbo_cd,
            mcode,
            mate_ver_cd,
            wcode,
            ware_ver_cd,
            fcode,          
            fac_ver_cd,
            purc_d_cd,
            lot_no,
            supplier_lot_no,
            inbo_dt,
            inbo_status,
            total_qty,
            mname,
            note,
            cp_cd,
            deli_dt
        ) VALUES (
            #{mateInboCd},
            #{mcode},
            #{mateVerCd},
            #{wcode},
            #{wareVerCd},
            #{fcode},
            #{facVerCd},
            #{purcDCd},
            #{lotNo},
            #{supplierLotNo},
            #{inboDt},
            #{inboStatus},
            #{totalQty},
            #{mname},
            #{note},
            #{cpCd},
            #{deliDt}
        )
    </insert>
    
    <!-- 자재입고 수정 -->
    <update id="updateMateInbo" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE mate_inbo SET
            mcode = #{mcode},
            mate_ver_cd = #{mateVerCd},
            wcode = #{wcode},
            ware_ver_cd = #{wareVerCd},
            fcode = #{fcode},         
            fac_ver_cd = #{facVerCd}, 
            purc_d_cd = #{purcDCd},
            lot_no = #{lotNo},
            supplier_lot_no = #{supplierLotNo},
            inbo_dt = #{inboDt},
            inbo_status = #{inboStatus},
            total_qty = #{totalQty},
            mname = #{mname},
            note = #{note},
            cp_cd = #{cpCd},
            deli_dt = #{deliDt}
        WHERE mate_inbo_cd = #{mateInboCd}
    </update>

    <!-- LOT 패턴별 개수 조회 -->
    <select id="countLotsByPattern" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM mate_inbo 
        WHERE lot_no LIKE #{lotPattern}
        AND TO_CHAR(inbo_dt, 'YYYYMMDD') = SUBSTR(#{lotPattern}, 5, 8)
    </select>

    <!-- 자재 코드로 품목 유형 조회 -->
    <select id="getMaterialType" parameterType="String" resultType="String">
        SELECT mate_type
        FROM material 
        WHERE mcode = #{mcode}
        AND is_used = 'f1'
        AND ROWNUM = 1
    </select>

    <!-- 운영중인 공장 목록 조회 -->
    <select id="getActiveFactoryList" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            f.fcode,
            f.fac_ver_cd,
            f.fac_name,
            f.address,
            f.tel,
            f.mname,
            f.op_status,
            f.note
        FROM factory f
        WHERE f.op_status = 'r1'
        ORDER BY f.fac_name ASC
    </select>
    
    <!-- 발주 목록 조회 -->
    <select id="getPurcOrdList" parameterType="map" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
        <choose>
            <when test="memtype == 'p1'">
                po.purc_cd,
                pod.purc_d_cd,
                pod.mcode,
                mat.mate_name,
                pod.purc_qty,
                pod.unit,
                pod.unit_price,
                pod.ex_deli_dt,
                mati.deli_dt,
                pod.purc_d_status,
                (pod.purc_qty * pod.unit_price) AS total_amount,
                po.regi,
                e.emp_name AS regi_name,
                pod.note
            </when>
            <when test="memtype == 'p3'">
                po.purc_cd,
                pod.purc_d_cd,
                pod.mcode,
                mat.mate_name,
                pod.purc_qty,
                pod.unit,
                pod.unit_price,
                pod.ex_deli_dt,
                pod.purc_d_status,
                (pod.purc_qty * pod.unit_price) AS total_amount,
                po.regi,
                e.emp_name AS regi_name,
                pod.note
            </when>
            <otherwise>
                po.purc_cd,
                mat.mate_name,
                pod.purc_qty,
                po.ord_dt
            </otherwise>
        </choose>
        FROM purc_ord po
        LEFT JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        LEFT JOIN material mat ON pod.mcode = mat.mcode
        LEFT JOIN mate_inbo mati ON pod.purc_d_cd = mati.purc_d_cd
        LEFT JOIN employee e ON po.regi = e.emp_cd 
        <where>
            <if test="purcCd != null and purcCd != ''">
                AND UPPER(po.purc_cd) LIKE UPPER('%' || #{purcCd} || '%')
            </if>
            <if test="purcDCd != null and purcDCd != ''">
                AND UPPER(pod.purc_d_cd) LIKE UPPER('%' || #{purcDCd} || '%')
            </if>
            <if test="mateName != null and mateName != ''">
                AND UPPER(mat.mate_name) LIKE UPPER('%' || #{mateName} || '%')
            </if>
            <if test="mateType != null and mateType != ''">
                AND pod.mate_type = #{mateType}
            </if>
            <if test="purcDStatus != null and purcDStatus != ''">
                AND pod.purc_d_status = #{purcDStatus}
            </if>
            <if test="mcode != null and mcode != ''">
                AND pod.mcode = #{mcode}
            </if>
            <if test="startDate != null and startDate != ''">
                AND po.ord_dt &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND po.ord_dt &lt;= #{endDate}
            </if>
            <if test="exDeliStartDate != null and exDeliStartDate != ''">
                AND pod.ex_deli_dt &gt;= #{exDeliStartDate}
            </if>
            <if test="exDeliEndDate != null and exDeliEndDate != ''">
                AND pod.ex_deli_dt &lt;= #{exDeliEndDate}
            </if>
            <if test="deliStartDate != null and deliStartDate != ''">
                AND mati.deli_dt &gt;= #{deliStartDate}
            </if>
            <if test="deliEndDate != null and deliEndDate != ''">
                AND mati.deli_dt &lt;= #{deliEndDate}
            </if>
        </where>
        ORDER BY po.ord_dt DESC
    </select>

    <!-- 발주서 목록 조회 (모달용) -->
    <select id="getPurcOrderList" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            purc_cd,
            ord_dt,
            regi,
            purc_status,
            ord_total_amount
        FROM purc_ord
        ORDER BY ord_dt DESC, purc_cd DESC
    </select>

    <!-- 발주서 단건 조회 (헤더 + 상세) -->
    <select id="getPurcOrderWithDetails" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT DISTINCT
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            po.ord_total_amount,
            
            -- 발주상세 정보
            pod.purc_d_cd,
            pod.mate_cp_cd,
            pod.mcode,
            pod.purc_qty,
            pod.unit,
            pod.unit_price,
            pod.ex_deli_dt,
            pod.note as detail_note,
            pod.purc_d_status,
            
            -- 자재 정보 (material 테이블에서)
            m.mate_name,
            m.mate_ver_cd,
            m.mate_type,
            m.std,
            m.sto_con,
            
            -- 거래처 정보 (mate_supplier 거쳐서)
            c.cp_cd,
            c.cp_name,
            c.cp_type,
            c.repname,
            c.tel as cp_tel,
            c.address as cp_address
            
        FROM purc_ord po
        LEFT JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        -- 복합키 mcode와 mate_ver_cd를 사용하여 material 테이블과 조인
        LEFT JOIN material m ON pod.mcode = m.mcode AND pod.mate_ver_cd = m.mate_ver_cd
        LEFT JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        LEFT JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE po.purc_cd = #{purcCd}
        ORDER BY pod.purc_d_cd
    </select>

    <!-- mate_supplier 테이블에서 PK 찾기 -->
    <select id="findMateSupplier" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mate_cp_cd,
            mcode,
            mate_ver_cd,
            cp_cd,
            unit_price,
            ltime
        FROM mate_supplier 
        WHERE 1=1
        <if test="mcode != null and mcode != ''">
            AND mcode = #{mcode}
        </if>
        <if test="mateVerCd != null and mateVerCd != ''">
            AND mate_ver_cd = #{mateVerCd}
        </if>
        <if test="cpCd != null and cpCd != ''">
            AND cp_cd = #{cpCd}
        </if>
    </select>

    <!-- 자재-거래처 연결 조회 (검색용) -->
    <select id="getMaterialWithSuppliers" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            m.mcode,
            m.mate_ver_cd,
            m.mate_name,
            m.mate_type,
            m.unit,
            m.std,
            m.sto_con,
            m.safe_stock,
            ms.unit_price,
            ms.ltime,
            ms.mate_cp_cd,
            -- 거래처 정보
            c.cp_cd,
            c.cp_name,
            c.cp_type,
            c.repname,
            c.tel as cp_tel,
            c.address as cp_address
        FROM material m
        INNER JOIN mate_supplier ms ON m.mcode = ms.mcode AND m.mate_ver_cd = ms.mate_ver_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE m.is_used = 'f1' 
        AND c.is_used = 'f1'
        <if test="mcode != null and mcode != ''">
            AND m.mcode = #{mcode}
        </if>
        <if test="mateName != null and mateName != ''">
            AND UPPER(m.mate_name) LIKE UPPER('%' || #{mateName} || '%')
        </if>
        <if test="cpCd != null and cpCd != ''">
            AND c.cp_cd = #{cpCd}
        </if>
        <if test="cpName != null and cpName != ''">
            AND UPPER(c.cp_name) LIKE UPPER('%' || #{cpName} || '%')
        </if>
        ORDER BY m.mate_name, c.cp_name
    </select>

    <!-- 발주서 헤더 등록 -->
    <insert id="insertPurcOrder" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        INSERT INTO purc_ord (
            purc_cd,
            ord_dt,
            regi,
            purc_status,
            ord_total_amount
        ) VALUES (
            #{purcCd},
            #{ordDt},
            #{regi},
            #{purcStatus},
            #{ordTotalAmount}
        )
    </insert>

    <!-- 단건 조회용 -->
    <select id="getMateSupplierByKey" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mate_cp_cd,
            mcode,
            mate_ver_cd,
            cp_cd,
            unit_price,
            ltime
        FROM mate_supplier 
        WHERE mcode = #{mcode}
        AND mate_ver_cd = #{mateVerCd}
        AND cp_cd = #{cpCd}
    </select>

    <!-- PK만 조회 (간단버전) -->
    <select id="getMateCpCd" resultType="String">
        SELECT mate_cp_cd
        FROM mate_supplier 
        WHERE mcode = #{mcode}
        AND mate_ver_cd = #{mateVerCd}
        AND cp_cd = #{cpCd}
    </select>

    <!-- 발주서 상세 등록 -->
    <insert id="insertPurcOrderDetail" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        INSERT INTO purc_ord_d (
            purc_d_cd,
            purc_cd,
            mate_cp_cd,
            mcode,
            mate_ver_cd,
            purc_qty,
            unit,
            unit_price,
            ex_deli_dt,
            note,
            purc_d_status
        ) VALUES (
            #{purcDCd},
            #{purcCd},
            #{mateCpCd},
            #{mcode},
            #{mateVerCd},
            #{purcQty},
            #{unit},
            #{unitPrice},
            #{exDeliDt},
            #{note},
            #{purcDStatus}
        )
    </insert>

    <select id="getLastPurcCode" resultType="String">
        SELECT * FROM (
            SELECT purc_cd 
            FROM purc_ord 
            WHERE purc_cd LIKE 'PURC-%' 
            ORDER BY purc_cd DESC
        ) WHERE ROWNUM = 1
    </select>

    <!-- 발주서 헤더 수정 -->
    <update id="updatePurcOrder" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE purc_ord SET
            ord_dt = #{ordDt},
            regi = #{regi},
            purc_status = #{purcStatus},
            ord_total_amount = #{ordTotalAmount}
        WHERE purc_cd = #{purcCd}
    </update>

    <!-- 발주서 상세 삭제 -->
    <delete id="deletePurcOrderDetails" parameterType="String">
        DELETE FROM purc_ord_d 
        WHERE purc_cd = #{purcCd}
    </delete>

    <!-- 발주서 상세 수정 -->
    <update id="updatePurcOrderDetail" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE purc_ord_d SET
            mcode = #{mcode},
            mate_ver_cd = #{mateVerCd},
            purc_qty = #{purcQty},
            unit = #{unit},
            unit_price = #{unitPrice},
            ex_deli_dt = #{exDeliDt},
            note = #{note},
            purc_d_status = #{purcDStatus}
        WHERE purc_d_cd = #{purcDCd}
    </update>

    <select id="getLastPurcDetailCode" resultType="String">
        SELECT * FROM (
            SELECT purc_d_cd 
            FROM purc_ord_d 
            WHERE purc_d_cd LIKE 'PURC-D-%'
            ORDER BY purc_d_cd DESC
        ) WHERE ROWNUM = 1
    </select>

    <select id="getPurcOrderDetailListForApproval" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            po.ord_total_amount,
            pod.purc_d_cd,
            pod.purc_qty,
            pod.unit_price,
            pod.ex_deli_dt,
            pod.note,
            pod.purc_d_status,
            m.mate_name,
            c.cp_name
        FROM purc_ord po
        INNER JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        INNER JOIN material m ON pod.mcode = m.mcode AND pod.mate_ver_cd = m.mate_ver_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE po.purc_status IN ('c1', 'c2')
        ORDER BY po.ord_dt DESC, pod.purc_d_cd
    </select>

    <!-- 발주 상세 상태 업데이트 -->
    <update id="updatePurcOrderDetailStatus" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE purc_ord_d 
        SET purc_d_status = #{purcDStatus}
        <if test="note != null and note != ''">
            , note = #{note}
        </if>
        WHERE purc_d_cd = #{purcDCd}
    </update>

    <!-- 발주 헤더 상태 업데이트 -->
    <update id="updatePurcOrderHeaderStatus" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE purc_ord 
        SET purc_status = #{purcStatus}
        WHERE purc_cd = #{purcCd}
    </update>

    <!-- 승인 대기 발주 목록 조회 -->
    <select id="getPendingApprovalOrdersDetailed" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            po.ord_total_amount,
            
            -- 발주상세 정보
            pod.purc_d_cd,
            pod.mate_cp_cd,
            pod.mcode,
            pod.mate_ver_cd,
            pod.purc_qty,
            pod.unit,
            pod.unit_price,
            pod.ex_deli_dt,
            pod.note,
            pod.purc_d_status,
            
            -- 자재 정보
            m.mate_name,
            m.mate_type,
            m.std,
            m.sto_con,
            
            -- 거래처 정보
            c.cp_cd,
            c.cp_name,
            c.cp_type,
            c.repname,
            c.tel as cp_tel,
            c.address as cp_address,
            
            e.emp_name as regi_name,
            e.emp_name as emp_name
            
        FROM purc_ord po
        INNER JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        INNER JOIN material m ON pod.mcode = m.mcode AND pod.mate_ver_cd = m.mate_ver_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        LEFT JOIN employee e ON po.regi = e.emp_cd
        WHERE pod.purc_d_status = 'c1'
        <if test="purcCd != null and purcCd != ''">
            AND UPPER(po.purc_cd) LIKE UPPER('%' || #{purcCd} || '%')
        </if>
        <if test="mateName != null and mateName != ''">
            AND UPPER(m.mate_name) LIKE UPPER('%' || #{mateName} || '%')
        </if>
        <if test="cpName != null and cpName != ''">
            AND UPPER(c.cp_name) LIKE UPPER('%' || #{cpName} || '%')
        </if>
        <if test="startDate != null and startDate != ''">
            AND po.ord_dt &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND po.ord_dt &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        ORDER BY po.ord_dt DESC, pod.purc_d_cd ASC
    </select>

    <!-- 발주 상태별 통계 조회 -->
    <select id="getPurchaseOrderStatusStatistics" resultType="java.util.Map">
        SELECT 
            purc_d_status as status,
            COUNT(*) as count,
            SUM(purc_qty * unit_price) as total_amount
        FROM purc_ord_d pod
        INNER JOIN purc_ord po ON pod.purc_cd = po.purc_cd
        WHERE 1=1
        <if test="startDate != null and startDate != ''">
            AND po.ord_dt &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND po.ord_dt &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        GROUP BY purc_d_status
        ORDER BY purc_d_status
    </select>

    <!-- 월별 발주 통계 조회 -->
    <select id="getMonthlyPurchaseStatistics" resultType="java.util.Map">
        SELECT 
            TO_CHAR(po.ord_dt, 'YYYY-MM') as order_month,
            COUNT(*) as order_count,
            SUM(pod.purc_qty * pod.unit_price) as total_amount,
            COUNT(DISTINCT po.purc_cd) as unique_orders,
            COUNT(DISTINCT ms.cp_cd) as unique_suppliers
        FROM purc_ord po
        INNER JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        WHERE 1=1
        <if test="startDate != null and startDate != ''">
            AND po.ord_dt &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND po.ord_dt &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        GROUP BY TO_CHAR(po.ord_dt, 'YYYY-MM')
        ORDER BY order_month DESC
    </select>

    <!-- 공급업체별 발주 통계 조회 -->
    <select id="getSupplierPurchaseStatistics" resultType="java.util.Map">
        SELECT 
            c.cp_name as supplier_name,
            c.cp_cd as supplier_code,
            COUNT(*) as order_count,
            SUM(pod.purc_qty * pod.unit_price) as total_amount,
            AVG(pod.purc_qty * pod.unit_price) as avg_amount
        FROM purc_ord po
        INNER JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE 1=1
        <if test="startDate != null and startDate != ''">
            AND po.ord_dt &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND po.ord_dt &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        GROUP BY c.cp_name, c.cp_cd
        ORDER BY total_amount DESC
        FETCH FIRST 10 ROWS ONLY
    </select>

    <!-- 발주 상세 정보 조회 -->
    <select id="getPurchaseOrderDetailWithHistory" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            pod.purc_d_cd,
            pod.purc_cd,
            pod.mcode,
            pod.mate_ver_cd,
            pod.purc_qty,
            pod.unit,
            pod.unit_price,
            pod.ex_deli_dt,
            pod.note,
            pod.purc_d_status,
            
            -- 자재 정보
            m.mate_name,
            m.mate_type,
            
            -- 거래처 정보
            c.cp_name,
            c.repname,
            
            -- 발주 기본 정보
            po.ord_dt,
            po.regi,
            po.purc_status
            
        FROM purc_ord_d pod
        INNER JOIN purc_ord po ON pod.purc_cd = po.purc_cd
        INNER JOIN material m ON pod.mcode = m.mcode AND pod.mate_ver_cd = m.mate_ver_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE pod.purc_d_cd = #{purcDCd}
    </select>

    <!-- 🎯 발주 조회 전용 쿼리 - Oracle 호환성 완벽 버전! -->
    <select id="getPurchaseOrdersForView" resultType="com.kimbap.kbs.materials.service.PurchaseOrderViewVO">
        SELECT DISTINCT 
            (po.purc_cd || '-' || pod.purc_d_cd) as id,
            
            -- 발주 기본 정보 (purc_ord)
            po.purc_cd,
            po.ord_dt,
            po.regi,
            po.purc_status,
            po.ord_total_amount,
            
            -- 발주 상세 정보 (purc_ord_d)
            pod.purc_d_cd,
            pod.mcode,
            pod.mate_ver_cd,
            pod.purc_qty,
            pod.unit,
            pod.unit_price,
            pod.ex_deli_dt,
            pod.purc_d_status,
            pod.note,
            
            -- 자재 정보 (material)
            m.mate_name,
            m.mate_type,
            
            -- 거래처 정보 (company)
            c.cp_cd,
            c.cp_name,
            
            -- 계산된 필드
            (pod.purc_qty * pod.unit_price) as total_amount,
            
            -- 등록자명 (employee)
            e.emp_name as regi_name,
            
            -- 실제납기일 (mate_inbo에서)
            mi.deli_dt
            
        FROM purc_ord po
        INNER JOIN purc_ord_d pod ON po.purc_cd = pod.purc_cd
        INNER JOIN material m ON pod.mcode = m.mcode AND pod.mate_ver_cd = m.mate_ver_cd
        INNER JOIN mate_supplier ms ON pod.mate_cp_cd = ms.mate_cp_cd  
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        LEFT JOIN employee e ON po.regi = e.emp_cd
        LEFT JOIN mate_inbo mi ON pod.purc_d_cd = mi.purc_d_cd
        
        <where>
            1=1
            <if test="cpCd != null and cpCd != ''">
                AND c.cp_cd = #{cpCd}
            </if>
            <if test="purcCd != null and purcCd != ''">
                AND UPPER(po.purc_cd) LIKE UPPER('%' || #{purcCd} || '%')
            </if>
            <if test="purcDCd != null and purcDCd != ''">
                AND UPPER(pod.purc_d_cd) LIKE UPPER('%' || #{purcDCd} || '%')
            </if>
            <if test="mateName != null and mateName != ''">
                AND UPPER(m.mate_name) LIKE UPPER('%' || #{mateName} || '%')
            </if>
            <if test="mateType != null and mateType != ''">
                AND m.mate_type = #{mateType}
            </if>
            <if test="purcDStatus != null and purcDStatus != ''">
                AND pod.purc_d_status = #{purcDStatus}
            </if>
            <if test="mcode != null and mcode != ''">
                AND pod.mcode = #{mcode}
            </if>
            <if test="cpName != null and cpName != ''">
                AND UPPER(c.cp_name) LIKE UPPER('%' || #{cpName} || '%')
            </if>
            <if test="startDate != null and startDate != ''">
                AND po.ord_dt &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null and endDate != ''">
                AND po.ord_dt &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
            </if>
            <if test="exDeliStartDate != null and exDeliStartDate != ''">
                AND pod.ex_deli_dt &gt;= TO_DATE(#{exDeliStartDate}, 'YYYY-MM-DD')
            </if>
            <if test="exDeliEndDate != null and exDeliEndDate != ''">
                AND pod.ex_deli_dt &lt;= TO_DATE(#{exDeliEndDate}, 'YYYY-MM-DD')
            </if>
        </where>
        
        ORDER BY po.ord_dt DESC, pod.purc_d_cd ASC
    </select>

    <select id="getPurcOrderDetailByCode" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            purc_d_cd,
            purc_cd,
            mcode,
            mate_ver_cd,
            mate_cp_cd,
            purc_qty,
            curr_qty,
            unit,
            unit_price,
            ex_deli_dt,
            note,
            purc_d_status
        FROM purc_ord_d 
        WHERE purc_d_cd = #{purcDCd}
    </select>

    <!-- 공급업체의 자재출고 처리를 위한 목록 조회 및 검색 -->
    <select id="getSupplierMateRelList" resultType="com.kimbap.kbs.materials.service.PurchaseOrderViewVO">
        SELECT DISTINCT
            -- 기본 정보
            po.purc_cd,
            po.ord_dt,
            po.purc_status,
            
            -- 발주 상세 정보
            pd.purc_d_cd,
            pd.purc_qty,
            pd.curr_qty,
            (pd.purc_qty - COALESCE(pd.curr_qty, 0)) AS left_qty,
            pd.unit,
            pd.unit_price,
            (pd.purc_qty * pd.unit_price) AS total_price,
            pd.ex_deli_dt,
            pd.deli_dt,
            pd.purc_d_status,
            pd.note,
            
            -- 자재 정보
            m.mate_name,
            m.mcode,
            m.mate_ver_cd,
            m.mate_type,
            
            -- 거래처 정보
            c.cp_name,
            c.cp_cd
            
        FROM purc_ord po
        INNER JOIN purc_ord_d pd ON po.purc_cd = pd.purc_cd
        INNER JOIN material m ON pd.mcode = m.mcode AND pd.mate_ver_cd = m.mate_ver_cd
        INNER JOIN mate_supplier ms ON pd.mate_cp_cd = ms.mate_cp_cd
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        
        <where>
            1=1
            -- 거래처 필터 (필수)
            <if test="cpCd != null and cpCd != ''">
                AND c.cp_cd = #{cpCd}
            </if>
            
            -- 출고 가능한 상태만 (승인완료 + 잔여수량 있음)
            AND pd.purc_d_status = 'c2'
            AND (pd.purc_qty - COALESCE(pd.curr_qty, 0)) > 0
            
            -- 🎯 검색 조건 3개만!
            <if test="purcCd != null and purcCd != ''">
                AND po.purc_cd LIKE '%' || #{purcCd} || '%'
            </if>
            <if test="purcDStatus != null and purcDStatus != ''">
                AND pd.purc_d_status = #{purcDStatus}
            </if>
            <if test="ordDtStart != null and ordDtStart != ''">
                AND po.ord_dt &gt;= TO_DATE(#{ordDtStart}, 'YYYY-MM-DD')
            </if>
            <if test="ordDtEnd != null and ordDtEnd != ''">
                AND po.ord_dt &lt;= TO_DATE(#{ordDtEnd}, 'YYYY-MM-DD')
            </if>
        </where>
        
        ORDER BY po.ord_dt DESC, pd.ex_deli_dt ASC
    </select>

    <!-- 자재출고 목록 조회 -->
    <select id="getMateRelList" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            mate_rel_cd,
            produ_prod_cd,
            mcode,
            mate_ver_cd,
            wslcode,
            lot_no,
            rel_qty,
            unit,
            rel_dt,
            rel_type,
            mname,
            note,
            cre_dt,
            mod_dt
        FROM mate_rel
        ORDER BY rel_dt DESC
    </select>
    
    <!-- 자재출고 등록 -->
    <insert id="insertMateRel" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        INSERT INTO mate_rel (
            mate_rel_cd,
            produ_prod_cd,
            mcode,
            mate_ver_cd,
            wslcode,
            lot_no,
            rel_qty,
            unit,
            rel_dt,
            rel_type,
            mname,
            note,
            cre_dt,
            mod_dt
        ) VALUES (
            #{mateRelCd},
            #{produProdCd},
            #{mcode},
            #{mateVerCd},
            #{wslcode},
            #{lotNo},
            #{relQty},
            #{unit},
            #{relDt},
            #{relType},
            #{mname},
            #{note},
            #{creDt},
            #{modDt}
        )
    </insert>

    <!-- 자재 마스터만 조회 -->
    <select id="getMaterials" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            m.mcode,
            m.mate_ver_cd,
            m.mate_name,
            m.mate_type,
            m.unit,
            m.std,
            m.safe_stock
        FROM material m
        WHERE m.is_used = 'f1'
        <if test="mateName != null and mateName != ''">
            AND UPPER(m.mate_name) LIKE UPPER('%' || #{mateName} || '%')
        </if>
        <if test="mateType != null and mateType != ''">
            AND m.mate_type = #{mateType}
        </if>
        ORDER BY m.mate_name
    </select>

    <!-- curr_qty와 상태를 동시에 업데이트 -->
    <update id="updatePurchaseOrderCurrQtyAndStatus" parameterType="com.kimbap.kbs.materials.service.MaterialsVO">
        UPDATE purc_ord_d 
        SET curr_qty = #{currQty},
            purc_d_status = #{purcDStatus}
        WHERE purc_d_cd = #{purcDCd}
    </update>

    <!-- 거래처 마스터만 조회 -->
    <select id="getSuppliers" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            c.cp_cd,
            c.cp_name,
            c.cp_type,
            c.repname,
            c.tel as cp_tel,
            c.address as cp_address
        FROM company c
        WHERE c.is_used = 'f1'
        <if test="cpName != null and cpName != ''">
            AND UPPER(c.cp_name) LIKE UPPER('%' || #{cpName} || '%')
        </if>
        <if test="cpCd != null and cpCd != ''">
            AND c.cp_type = #{cpCd}
        </if>
        ORDER BY c.cp_name
    </select>

    <!-- 특정 자재의 공급업체들 조회 -->
    <select id="getSuppliersByMaterial" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            c.cp_cd,
            c.cp_name,
            c.repname,
            c.tel as cp_tel,
            ms.unit_price,
            ms.ltime
        FROM mate_supplier ms
        INNER JOIN company c ON ms.cp_cd = c.cp_cd
        WHERE ms.mcode = #{mcode} 
        AND ms.mate_ver_cd = #{mateVerCd}
        AND c.is_used = 'f1'
        ORDER BY c.cp_name
    </select>

    <!-- 특정 거래처의 자재들 조회 -->
    <select id="getMaterialsBySupplier" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            m.mcode,
            m.mate_ver_cd,
            m.mate_name,
            m.mate_type,
            m.unit,
            ms.unit_price,
            ms.ltime
        FROM mate_supplier ms
        INNER JOIN material m ON ms.mcode = m.mcode AND ms.mate_ver_cd = m.mate_ver_cd
        WHERE ms.cp_cd = #{cpCd}
        AND m.is_used = 'f1'
        ORDER BY m.mate_name
    </select>
    
    <!-- 🔢 mate_inbo 테이블에서 가장 마지막 입고코드 조회 -->
    <select id="getLastMateInboCode" resultType="String">
        SELECT mate_inbo_cd
        FROM (
            SELECT mate_inbo_cd
            FROM mate_inbo
            WHERE mate_inbo_cd LIKE 'MATI-${yearMonth}-%'
            ORDER BY mate_inbo_cd DESC
        )
        WHERE ROWNUM = 1
    </select>
    
    <!-- 🔄 발주상세의 curr_qty 업데이트 (누적) -->
    <update id="updatePurchaseOrderCurrQty">
        UPDATE purc_ord_d
        SET curr_qty = #{currQty}
        WHERE purc_d_cd = #{purcDCd}
    </update>
    
    <!-- 🔒 동시성 제어를 위한 마지막 입고코드 조회 (FOR UPDATE) -->
    <select id="getLastMateInboCodeForUpdate" resultType="String">
        SELECT mate_inbo_cd
        FROM (
            SELECT mate_inbo_cd
            FROM mate_inbo
            WHERE mate_inbo_cd LIKE 'MATI-${yearMonth}-%'
            ORDER BY mate_inbo_cd DESC
        )
        WHERE ROWNUM = 1
        FOR UPDATE
    </select>
    
    <!-- 🔒 임시 입고코드 예약 (동시성 방지) -->
    <insert id="insertTempMateInboReservation">
        INSERT INTO mate_inbo (
            mate_inbo_cd,
            purc_d_cd,
            total_qty,
            inbo_status,
            inbo_dt
        ) VALUES (
            #{mateInboCd},
            #{purcDCd},
            #{totalQty},
            #{inboStatus},
            SYSDATE
        )
    </insert>
    
    <!--  자재입출고 내역 -->
    <select id="selectMaterialFlowList" parameterType="map" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT *
        FROM (
            SELECT 
                TRUNC(i.inbo_dt) AS reg_dt,
                '입고' AS movement_type,
                '발주' AS movement_category,
                m.mate_name,
                m.mcode,
                i.total_qty AS qty,
                m.unit,
                wh.ware_name,
                i.lot_no,
                i.note
            FROM mate_inbo i
            JOIN material m 
            ON i.mcode = m.mcode 
            AND i.mate_ver_cd = m.mate_ver_cd
            LEFT JOIN warehouse wh ON i.wcode = wh.wcode

            UNION ALL

            SELECT DISTINCT
                TRUNC(r.cre_dt) AS reg_dt,
                '출고' AS movement_type,
                r.rel_type AS movement_category,
                m.mate_name,
                m.mcode,
                r.rel_qty AS qty,
                m.unit,
                wh.ware_name,
                r.lot_no,
                r.note
            FROM mate_rel r
            JOIN material m 
            ON r.mcode = m.mcode
            AND r.mate_ver_cd = m.mate_ver_cd
            LEFT JOIN ware_stock ws ON r.wslcode = ws.wslcode
            LEFT JOIN ware_d wd ON ws.ware_area_cd = wd.ware_area_cd
            LEFT JOIN warehouse wh ON wd.wcode = wh.wcode AND wd.ware_ver_cd = wh.ware_ver_cd
        ) t
        <where>
            <if test="movementType != null and movementType != ''">
                AND t.movement_type = #{movementType}
            </if>
            <if test="mateName != null and mateName != ''">
                AND t.mate_name LIKE '%' || #{mateName} || '%'
            </if>
            <if test="wareName != null and wareName != ''">
                AND t.ware_name LIKE '%' || #{wareName} || '%'
            </if>
            <if test="lotNo != null and lotNo != ''">
                AND t.lot_no LIKE '%' || #{lotNo} || '%'
            </if>
            <if test="regDtStart != null and regDtStart != ''">
                AND t.reg_dt &gt;= TO_DATE(#{regDtStart}, 'YYYY-MM-DD')
            </if>
            <if test="regDtEnd != null and regDtEnd != ''">
                AND t.reg_dt &lt;= TO_DATE(#{regDtEnd}, 'YYYY-MM-DD')
            </if>
        </where>
        ORDER BY t.reg_dt DESC
    </select>


    <!-- 하루치  -->
    <select id="selectTodayMaterialFlowList" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT *
        FROM (
            SELECT 
                TRUNC(i.inbo_dt) AS reg_dt,
                '입고' AS movement_type,
                '발주' AS movement_category,
                m.mate_name,
                m.mcode,
                i.total_qty AS qty,
                m.unit,
                wh.ware_name,
                i.lot_no,
                i.note
            FROM mate_inbo i
            JOIN material m ON i.mcode = m.mcode
            AND i.mate_ver_cd = m.mate_ver_cd
            LEFT JOIN warehouse wh ON i.wcode = wh.wcode

            UNION ALL

            SELECT 
                TRUNC(r.cre_dt) AS reg_dt,
                '출고' AS movement_type,
                r.rel_type AS movement_category,
                m.mate_name,
                m.mcode,
                r.rel_qty AS qty,
                m.unit,
                wh.ware_name,
                r.lot_no,
                r.note
            FROM mate_rel r
            JOIN material m ON r.mcode = m.mcode
            AND r.mate_ver_cd = m.mate_ver_cd
            LEFT JOIN ware_stock ws ON r.wslcode = ws.wslcode
            LEFT JOIN ware_d wd ON ws.ware_area_cd = wd.ware_area_cd
            LEFT JOIN warehouse wh ON wd.wcode = wh.wcode AND wd.ware_ver_cd = wh.ware_ver_cd
        ) t
        WHERE t.reg_dt = TRUNC(SYSDATE)
        ORDER BY t.reg_dt DESC
        </select>
    <!-- 자재 재고 현황 조회 -->
    <select id="getMaterialStockStatus" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            material_code,
            material_name,
            material_type,
            material_type_text,
            factory_code,
            factory_name,
            total_quantity,
            unit,
            unit_text,
            specification,
            stock_status,
            safe_stock,
            stock_difference,
            stock_percentage,
            lot_detail_link,
            storage_condition,
            storage_condition_text,
            origin,
            expiry_days,
            material_note,
            last_inbound_date,
            warehouse_count
        FROM V_MATERIAL_STOCK_STATUS
        WHERE 1=1
        
        <!-- 동적 조건들은 여전히 필요해! -->
        <if test="mcode != null and mcode != ''">
            AND material_code LIKE '%' || #{mcode} || '%'
        </if>
        
        <if test="mateName != null and mateName != ''">
            AND material_name LIKE '%' || #{mateName} || '%'
        </if>
        
        <if test="mateType != null and mateType != ''">
            AND material_type = #{mateType}
        </if>
        
        <if test="facName != null and facName != ''">
            AND factory_name LIKE '%' || #{facName} || '%'
        </if>
    </select>

    
    <!-- 🔍 LOT별 재고 조회 -->
    <select id="getMaterialLotStock" parameterType="String" resultType="com.kimbap.kbs.materials.service.MaterialsVO">
        SELECT 
            -- 기본 LOT 정보
            mi.lot_no AS lotNo,
            mi.supplier_lot_no AS supplierLotNo,
            
            -- 재고 수량 정보
            ws.qty AS quantity,
            ws.unit,
            NVL(dc_unit.cd_info, ws.unit) AS unitText,
            
            -- 입고 관련 정보  
            mi.inbo_dt AS inboundDate,
            mi.inbo_status AS inboundStatus,
            NVL(dc_status.cd_info, mi.inbo_status) AS inboundStatusText,
            
            -- 유효기간 계산 (입고일 + 자재 유효기간)
            CASE 
                WHEN m.edate > 0 THEN 
                    mi.inbo_dt + INTERVAL m.edate DAY
                ELSE NULL 
            END AS expiryDate,
            
            -- 창고 정보
            w.ware_name AS warehouseName,
            wd.area_row || '-' || wd.area_col || '-' || wd.area_floor AS location,
            
            -- 보관조건
            m.sto_con AS storageCondition,
            NVL(dc_condition.cd_info, m.sto_con) AS storageConditionText,
            
            -- 자재 기본 정보
            m.mate_name AS materialName,
            m.mate_type AS materialType,
            NVL(dc_type.cd_info, m.mate_type) AS materialTypeText,
            m.std AS specification,
            
            -- 공급업체 정보
            c.cp_name AS supplierName,
            
            -- 기타 정보
            mi.note,
            mi.mname AS managerName,
            
            -- 정렬용 (최신 입고순)
            mi.inbo_dt AS sortDate

        FROM ware_stock ws
            INNER JOIN mate_inbo mi ON ws.mate_inbo_cd = mi.mate_inbo_cd
            LEFT JOIN material m ON mi.mcode = m.mcode AND mi.mate_ver_cd = m.mate_ver_cd
            LEFT JOIN warehouse w ON mi.wcode = w.wcode AND mi.ware_ver_cd = w.ware_ver_cd
            LEFT JOIN ware_d wd ON ws.ware_area_cd = wd.ware_area_cd
            LEFT JOIN company c ON mi.cp_cd = c.cp_cd
            
            -- 🎯 공통코드 조인 (성능 최적화)
            LEFT JOIN (SELECT d_cd, cd_info FROM detail_cd WHERE group_cd = '0G') dc_unit 
                ON ws.unit = dc_unit.d_cd
            LEFT JOIN (SELECT d_cd, cd_info FROM detail_cd WHERE group_cd = '0E') dc_status 
                ON mi.inbo_status = dc_status.d_cd
            LEFT JOIN (SELECT d_cd, cd_info FROM detail_cd WHERE group_cd = '0O') dc_condition 
                ON m.sto_con = dc_condition.d_cd
            LEFT JOIN (SELECT d_cd, cd_info FROM detail_cd WHERE group_cd = '0H') dc_type 
                ON m.mate_type = dc_type.d_cd

        WHERE 1=1
            AND mi.mcode = #{mcode}
            AND (ws.item_type = 'h1' OR (ws.item_type IS NULL AND ws.mate_inbo_cd IS NOT NULL))
            AND ws.qty > 0
            AND m.is_used IN ('f1', 'f2')

        ORDER BY 
            mi.inbo_dt DESC,
            mi.lot_no ASC
    </select>
</mapper>