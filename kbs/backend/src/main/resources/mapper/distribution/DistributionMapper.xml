<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kimbap.kbs.distribution.mapper.DistributionMapper">

  <!-- 입출고 조회 페이지 -->
  <select id="getInOutCheck" resultType="com.kimbap.kbs.distribution.service.DistributionVO" parameterType="com.kimbap.kbs.distribution.service.DistributionVO">
    SELECT
    temp.regDt,
    temp.type,
    temp.pCode,
    temp.prodName,
    temp.qty,
    temp.wareAreaCd,
    temp.stockQty,
    temp.note
  FROM (

    SELECT 
      a.inbo_dt AS regDt,
      '입고' AS type,
      a.pcode,
      b.prod_name AS prodName,
      a.inbo_qty AS qty,
      '' AS note,
      c.ware_area_cd AS wareAreaCd,
      c.qty AS stockQty
    FROM prod_inbo a
    JOIN product b ON a.pcode = b.pcode
    JOIN ware_stock c ON a.prod_inbo_cd = c.prod_inbo_cd

    UNION ALL

    SELECT 
      rom.rel_dt AS regDt,
      '출고' AS type,
      b.pcode,
      b.prod_name AS prodName,
      a.rel_qty AS qty,
      rom.note,
      e.ware_area_cd AS wareAreaCd,
      e.qty AS stockQty
    FROM prod_rel a
    JOIN product b ON a.pcode = b.pcode
    JOIN release_ord d ON a.rel_ord_cd = d.rel_ord_cd
    JOIN release_ord_master rom ON d.rel_mas_cd = rom.rel_mas_cd
    JOIN prod_inbo f ON a.lot_no = f.lot_no
    JOIN ware_stock e ON f.prod_inbo_cd = e.prod_inbo_cd
  ) temp

  <where>
    <if test="prodName != null and prodName != ''">
      AND temp.prodName LIKE '%' || #{prodName} || '%'
    </if>
    <if test="pCode != null and pCode != ''">
      AND temp.pCode LIKE '%' || #{pCode} || '%'
    </if>
    <if test="wareAreaCd != null and wareAreaCd != ''">
      AND temp.wareAreaCd LIKE '%' || #{wareAreaCd} || '%'
    </if>
    <if test="type != null and type != '전체'">
      AND temp.type = #{type}
    </if>
    <if test="startDate != null and endDate != null">
      AND temp.regDt BETWEEN #{startDate} AND #{endDate}
    </if>
  </where>


    ORDER BY temp.regDt DESC
  </select>

  <!-- 출고지시서 조회 -->
<select id="getRelOrdList" resultType="com.kimbap.kbs.distribution.service.RelOrderAndResultVO" parameterType="com.kimbap.kbs.distribution.service.RelOrderAndResultVO">
  SELECT 
    rom.rel_mas_cd       AS relMasCd,
    rom.rel_dt           AS relDt,
    cp.cp_name           AS cpName,

    (
      SELECT MIN(p.prod_name) || CASE WHEN COUNT(*) > 1 THEN ' 외 ' || (COUNT(*) - 1) || '개' ELSE '' END
      FROM release_ord ro
      JOIN order_d od ON ro.ord_d_cd = od.ord_d_cd
      JOIN product p ON od.pcode = p.pcode AND od.prod_ver_cd = p.prod_ver_cd
      WHERE ro.rel_mas_cd = rom.rel_mas_cd
    ) AS prodName,

    (
      SELECT SUM(ro.rel_ord_qty)
      FROM release_ord ro
      WHERE ro.rel_mas_cd = rom.rel_mas_cd
    ) AS relOrdQty,

    ol.deli_add          AS deliAdd,
    rom.rel_ord_status   AS relOrdStatus,
    rom.note             AS note

  FROM release_ord_master rom
  JOIN release_ord ro1 ON rom.rel_mas_cd = ro1.rel_mas_cd
  JOIN order_d od1 ON ro1.ord_d_cd = od1.ord_d_cd
  JOIN order_list ol ON od1.ord_cd = ol.ord_cd
  JOIN company cp ON ol.cp_cd = cp.cp_cd

  <where>
    <if test="cpName != null and cpName != ''">
      AND cp.cp_name LIKE '%' || #{cpName} || '%'
    </if>
    <if test="relMasCd != null and relMasCd != ''">
      AND rom.rel_mas_cd LIKE '%' || #{relMasCd} || '%'
    </if>
    <if test="type != null and type != '전체'">
      AND rom.rel_ord_status = #{type}
    </if>
    <if test="startDate != null and endDate != null">
      AND rom.rel_dt BETWEEN #{startDate} AND #{endDate}
    </if>
  </where>

  GROUP BY rom.rel_mas_cd, rom.rel_dt, cp.cp_name, ol.deli_add, rom.rel_ord_status, rom.note
  ORDER BY rom.rel_dt DESC
</select>

<!-- 출고지시서 모달 출력 -->
<select id="getRelOrdModal" resultType="com.kimbap.kbs.distribution.service.RelOrdModalVO" parameterType="com.kimbap.kbs.distribution.service.RelOrdModalVO">
  SELECT
      o.ord_cd AS ordCd,
      c.cp_name AS cpName,
      (
          SELECT 
              MIN(p.prod_name) || CASE 
                  WHEN COUNT(*) = 1 THEN ''
                  ELSE ' 외 ' || (COUNT(*) - 1) || '개'
              END
          FROM order_d od2
          JOIN product p ON od2.pcode = p.pcode AND od2.prod_ver_cd = p.prod_ver_cd
          WHERE od2.ord_cd = o.ord_cd
      ) AS prodNameSummary,
      o.ord_dt AS ordDt
  FROM order_list o
  JOIN company c ON o.cp_cd = c.cp_cd

  WHERE o.ord_status_customer IN ('s2', 's7', 's8')
    AND EXISTS (
      SELECT 1
      FROM order_d od
      JOIN prod_inbo pi ON od.pcode = pi.pcode AND od.prod_ver_cd = pi.prod_ver_cd
      WHERE od.ord_cd = o.ord_cd
    )
  ORDER BY o.ord_dt DESC
</select>

<!-- 출고지시서 모달 선택시 출력 -->
<select id="getRelOrdSelect" resultType="com.kimbap.kbs.distribution.service.RelOrdModalVO" parameterType="String">
SELECT
    <!-- 오늘자 출고지시서 코드 -->
    (
      SELECT 'REL-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' ||
             LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ro.rel_ord_cd, -4))), 0) + 1, 4, '0')
      FROM release_ord ro
      WHERE SUBSTR(ro.rel_ord_cd, 5, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
    ) AS newRelOrdCd,

     <!-- 오늘자 출고마스터 코드  -->
    (
      SELECT 'REL-M-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' ||
             LPAD(NVL(MAX(TO_NUMBER(SUBSTR(rom.rel_mas_cd, -4))), 0) + 1, 4, '0')
      FROM release_ord_master rom
      WHERE SUBSTR(rom.rel_mas_cd, 7, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
    ) AS newRelMasCd,

    p.prod_name    AS prodName,
    od.ord_qty     AS ordQty,
    od.pcode       AS pCode,
    od.prod_ver_cd AS prodVerCd,
    od.ord_d_cd    AS ordDCd,
    cp.cp_name     AS mCpName,
    cp.mname       AS mName,
    ol.ord_cd      AS ordCd,

NVL((
    SELECT SUM(pr.rel_qty)
      FROM prod_rel pr
      JOIN release_ord ro  ON pr.rel_ord_cd = ro.rel_ord_cd
      JOIN release_ord_master rom ON ro.rel_mas_cd = rom.rel_mas_cd
     WHERE ro.ord_d_cd = od.ord_d_cd
       AND rom.rel_ord_status NOT IN ('취소코드','반려코드')
), 0) AS relQty,

GREATEST(
  od.ord_qty - NVL((
      SELECT SUM(pr.rel_qty)
        FROM prod_rel pr
        JOIN release_ord ro  ON pr.rel_ord_cd = ro.rel_ord_cd
        JOIN release_ord_master rom ON ro.rel_mas_cd = rom.rel_mas_cd
       WHERE ro.ord_d_cd = od.ord_d_cd
         AND rom.rel_ord_status NOT IN ('취소코드','반려코드')
  ), 0),
  0
) AS noRelQty,

CASE
  WHEN NVL((
      SELECT SUM(pr.rel_qty)
        FROM prod_rel pr
        JOIN release_ord ro  ON pr.rel_ord_cd = ro.rel_ord_cd
        JOIN release_ord_master rom ON ro.rel_mas_cd = rom.rel_mas_cd
       WHERE ro.ord_d_cd = od.ord_d_cd
         AND rom.rel_ord_status NOT IN ('취소코드','반려코드')
  ), 0) = 0 THEN 'm1'
  WHEN NVL((
      SELECT SUM(pr.rel_qty)
        FROM prod_rel pr
        JOIN release_ord ro  ON pr.rel_ord_cd = ro.rel_ord_cd
        JOIN release_ord_master rom ON ro.rel_mas_cd = rom.rel_mas_cd
       WHERE ro.ord_d_cd = od.ord_d_cd
         AND rom.rel_ord_status NOT IN 'm4'
  ), 0) &lt; od.ord_qty THEN 'm3'
  ELSE 'm2'
END AS relOrdStatus


FROM order_d od
JOIN product    p  ON od.pcode = p.pcode AND od.prod_ver_cd = p.prod_ver_cd
JOIN order_list ol ON od.ord_cd = ol.ord_cd
JOIN company    cp ON ol.cp_cd = cp.cp_cd
WHERE od.ord_cd = #{ordCd}

ORDER BY p.prod_name

</select>

<!-- 창고출력 select -->
<select id="getWarehouseListByOrdCd" resultType="com.kimbap.kbs.distribution.service.WarehouseVO" parameterType="String">
  SELECT d.wcode AS wcode,
         d.ware_name AS wareName,
         d.ware_ver_cd AS wareVerCd,
         a.lot_no AS lotNo
  FROM   prod_inbo a
  JOIN   ware_stock b
  ON     a.prod_inbo_cd = b.prod_inbo_cd
  JOIN   ware_d c
  ON     b.ware_area_cd = c.ware_area_cd
  JOIN   warehouse d
  ON     c.wcode = d.wcode
  AND    c.ware_ver_cd = d.ware_ver_cd
  JOIN   product e
  ON     a.pcode = e.pcode
  AND    a.prod_ver_cd = e.prod_ver_cd
  JOIN   order_d f
  ON     e.pcode = f.pcode
  AND    e.prod_ver_cd = f.prod_ver_cd
  WHERE  f.ord_cd = #{ordCd}
</select>

<!-- 출고지시서 등록 (마스터)-->
<insert id="insertReleaseOrdMaster" parameterType="com.kimbap.kbs.distribution.service.ReleaseMasterOrdVO">
INSERT INTO release_ord_master (
  rel_mas_cd,
  regi,
  rel_dt,
  note,
  cp_cd,
  mname,
  deli_add,
  deli_req_dt,
  rel_ord_status
) VALUES (
  #{relMasCd},
  #{regi},
  SYSDATE,
  #{note},
  #{cpCd},
  #{mname},
  #{deliAdd},
  #{deliReqDt},
  'm1')
</insert>
<!-- 출고지시서 등록 (출고상세)-->
<insert id="insertReleaseOrdList" parameterType="java.util.List">
  INSERT ALL
  <foreach collection="list" item="item" separator="">
    INTO release_ord (
      rel_ord_cd,
      wcode,
      ware_ver_cd,
      ord_d_cd,
      rel_ord_qty,
      rel_mas_cd
    )
    VALUES (
      #{item.newRelOrdCd},
      #{item.wcode},
      #{item.wareVerCd},
      #{item.ordDCd},
      #{item.relQty},
      #{item.relMasCd}
    )
  </foreach>
  SELECT 1 FROM DUAL
</insert>
<!-- 주문목록 테이블 상태변경 -->
<update id="updateOrdStatusCustomer" parameterType="String">
  UPDATE order_list
  SET ord_status_customer = 's7'
  WHERE ord_cd = #{ordCd}
</update>


<select id="selectNewRelMasCd" resultType="String">
  SELECT 
    'REL-M-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' ||
    LPAD(NVL(MAX(TO_NUMBER(SUBSTR(rel_mas_cd, -4))), 0) + 1, 4, '0')
  FROM release_ord_master
  WHERE SUBSTR(rel_mas_cd, 7, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
</select>

<select id="selectMaxRelOrdSeqToday" resultType="int">
  SELECT 
    NVL(MAX(TO_NUMBER(SUBSTR(rel_ord_cd, -4))), 0)
  FROM release_ord
  WHERE SUBSTR(rel_ord_cd, 5, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
</select>

<!-- 출고지시서 불러오기: 대기(m1)만 -->
<select id="getRelOrdListWaiting"
        resultType="com.kimbap.kbs.distribution.service.RelOrderAndResultVO">

  SELECT
      rom.rel_mas_cd
    , rom.rel_dt
    , cp.cp_name

    , (
        SELECT MIN(p.prod_name)
               || CASE WHEN COUNT(*) > 1
                       THEN ' 외 ' || (COUNT(*) - 1) || '개'
                       ELSE '' END
        FROM release_ord ro
        JOIN order_d od
          ON ro.ord_d_cd = od.ord_d_cd
        JOIN product p
          ON od.pcode = p.pcode
         AND od.prod_ver_cd = p.prod_ver_cd
       WHERE ro.rel_mas_cd = rom.rel_mas_cd
      ) prod_name

    ,  (
    SELECT NVL(SUM(ro.rel_ord_qty), 0)
      FROM release_ord ro
     WHERE ro.rel_mas_cd = rom.rel_mas_cd
  ) rel_ord_qty

    , ol.deli_add
    , rom.rel_ord_status
    , rom.note

  FROM release_ord_master rom
  JOIN release_ord ro1
    ON rom.rel_mas_cd = ro1.rel_mas_cd
  JOIN order_d od1
    ON ro1.ord_d_cd = od1.ord_d_cd
  JOIN order_list ol
    ON od1.ord_cd = ol.ord_cd
  JOIN company cp
    ON ol.cp_cd = cp.cp_cd

  WHERE rom.rel_ord_status = 'm1'

  GROUP BY
      rom.rel_mas_cd
    , rom.rel_dt
    , cp.cp_name
    , ol.deli_add
    , rom.rel_ord_status
    , rom.note

  ORDER BY rom.rel_dt DESC, rom.rel_mas_cd DESC
</select>

<select id="getRelDetails"
        parameterType="string"
        resultType="com.kimbap.kbs.distribution.service.RelDetailVO">
  SELECT
      ro.rel_ord_cd
    , ro.ord_d_cd
    , od.pcode
    , p.prod_name
    , od.ord_qty
    , ro.rel_ord_qty 
    , ol.cp_cd
  FROM release_ord ro
  JOIN order_d od ON ro.ord_d_cd = od.ord_d_cd
  JOIN product p  ON od.pcode = p.pcode AND od.prod_ver_cd = p.prod_ver_cd
  JOIN release_ord_master rom ON ro.rel_mas_cd = rom.rel_mas_cd
  JOIN order_list ol ON od.ord_cd = ol.ord_cd
  WHERE ro.rel_mas_cd = #{relMasCd}
  ORDER BY p.prod_name, od.pcode
</select>

<select id="getLotsByPcode"
        parameterType="string"
        resultType="com.kimbap.kbs.distribution.service.LotStockVO">
  SELECT
      pi.lot_no,
      pi.pcode,
      ws.qty,
      pi.inbo_dt,
      wd.wcode,
      wd.ware_area_cd
  FROM prod_inbo pi
  JOIN ware_stock ws
    ON pi.prod_inbo_cd = ws.prod_inbo_cd
  JOIN ware_d wd
    ON ws.ware_area_cd = wd.ware_area_cd
  WHERE pi.pcode = #{pcode}
    AND ws.qty > 0
  ORDER BY pi.inbo_dt ASC, pi.lot_no 
</select>

<!-- 출고처리코드  -->
<select id="nextProdRelCd" resultType="string">
  SELECT 'PR' || TO_CHAR(SYSDATE, 'YYYYMMDD') ||
         LPAD(NVL(MAX(SUBSTR(prod_rel_cd, 11, 4)), 0) + 1, 4, '0')
  FROM prod_rel
  WHERE SUBSTR(prod_rel_cd, 3, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
</select>

<!-- ===================== 출고 마스터 저장 ===================== -->
<insert id="insertProdRel">
  INSERT INTO prod_rel (
    prod_rel_cd,
    lot_no,
    rel_qty,
    unit_price,
    rel_total_amount,
    rel_dt,
    rel_ord_cd,
    pcode,
    prod_ver_cd
  )
  VALUES (
    #{prodRelCd},
    #{lotNo},
    #{relQty},

    /* 단가: relOrdCd 우선 → 없으면 ord_d_cd로 */
    COALESCE(
      (SELECT od.unit_price
         FROM order_d od
         JOIN release_ord ro ON ro.ord_d_cd = od.ord_d_cd
        WHERE ro.rel_ord_cd = #{relOrdCd}),
      (SELECT od.unit_price
         FROM order_d od
        WHERE od.ord_d_cd = #{ordDCd})
    ),

    /* 총금액 = 단가 × 출고수량 */
    COALESCE(
      (SELECT od.unit_price
         FROM order_d od
         JOIN release_ord ro ON ro.ord_d_cd = od.ord_d_cd
        WHERE ro.rel_ord_cd = #{relOrdCd}),
      (SELECT od.unit_price
         FROM order_d od
        WHERE od.ord_d_cd = #{ordDCd}),
      0
    ) * #{relQty},

    SYSTIMESTAMP,
    #{relOrdCd},
    #{pcode},
    #{prodVerCd}
  )
</insert>

<select id="selectLatestProdVerCd" resultType="string">
  SELECT prod_ver_cd
  FROM (
    SELECT prod_ver_cd
    FROM product
    WHERE pcode = #{pcode}
    ORDER BY prod_ver_cd DESC
  )
  WHERE ROWNUM = 1
</select>
<!-- 지시서 실제 출고수량 합 -->
<select id="selectTotalReleasedQty" resultType="int">
  SELECT NVL(SUM(r.rel_qty), 0)
    FROM prod_rel r
    JOIN release_ord ro
      ON ro.rel_ord_cd = r.rel_ord_cd
    JOIN release_ord_master rom
      ON rom.rel_mas_cd = ro.rel_mas_cd
   WHERE rom.rel_mas_cd = #{relMasCd}
</select>

<select id="selectLotQtyForUpdate" resultType="int">
  SELECT ws.qty
    FROM ware_stock ws
    JOIN prod_inbo pi
      ON ws.prod_inbo_cd = pi.prod_inbo_cd
   WHERE pi.lot_no = #{lotNo}
     AND ws.ware_area_cd = #{wareAreaCd}
   FOR UPDATE
</select>

<update id="decreaseLotQty">
  UPDATE ware_stock ws
     SET ws.qty = ws.qty - #{qty}
   WHERE ws.ware_area_cd = #{wareAreaCd}
     AND ws.prod_inbo_cd IN (
           SELECT pi.prod_inbo_cd
             FROM prod_inbo pi
            WHERE pi.lot_no = #{lotNo}
         )
</update>

<select id="selectUnitPriceByOrdDCd" resultType="java.math.BigDecimal">
  SELECT unit_price
    FROM order_d
   WHERE ord_d_cd = #{ord_d_cd}
</select>

<update id="increaseCompanyUnsettledAmount">
  UPDATE company
     SET unsettled_amount = NVL(unsettled_amount, 0) + #{amount}
   WHERE cp_cd = #{cpCd}
</update>

<!-- 지시서 지시수량 합 -->
<select id="selectTotalRelOrdQty" resultType="int" parameterType="string">
  SELECT NVL(SUM(ro.rel_ord_qty), 0)
    FROM release_ord ro
   WHERE ro.rel_mas_cd = #{relMasCd}
</select>

<!-- 지시서 상태 변경 -->
<update id="updateRelOrderStatus" parameterType="map">
  UPDATE release_ord_master
     SET rel_ord_status = #{status}
   WHERE rel_mas_cd     = #{relMasCd}
</update>

<!-- 고객상태 업데이트 -->
<update id="updateCustomerOrderStatus">
    UPDATE order_list
       SET ord_status_customer = #{status}
     WHERE ord_cd = #{ordCd}
</update>

<!-- 주문코드 조회 -->
<select id="selectOrdCdByOrdDCd" parameterType="string" resultType="string">
    SELECT ord_cd
      FROM order_d
     WHERE ord_d_cd = #{ord_d_cd}
</select>

<!-- 해당 주문에 '잔여수량 > 0' 인 상세가 몇 개인지 -->
<select id="countRemainingQtyByOrdCd" parameterType="string" resultType="int">
  SELECT COUNT(1)
    FROM order_d od
    LEFT JOIN (
      SELECT ro.ord_d_cd, NVL(SUM(pr.rel_qty),0) rel_qty
        FROM prod_rel pr
        JOIN release_ord ro ON pr.rel_ord_cd = ro.rel_ord_cd
       GROUP BY ro.ord_d_cd
    ) r ON r.ord_d_cd = od.ord_d_cd
   WHERE od.ord_cd = #{ordCd}
     AND (od.ord_qty - NVL(r.rel_qty,0)) > 0
</select>

</mapper>